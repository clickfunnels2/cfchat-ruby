=begin
#CF Chat

#This is the API documentation for CF Chat server.

The version of the OpenAPI document: 1.0.0
Contact: support@clickfunnels.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Cfchat::ConversationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConversationsApi' do
  before do
    # run before each test
    @api_instance = Cfchat::ConversationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConversationsApi' do
    it 'should create an instance of ConversationsApi' do
      expect(@api_instance).to be_instance_of(Cfchat::ConversationsApi)
    end
  end

  # unit tests for conversation_filter
  # Conversations Filter
  # Filter conversations with custom filter options and pagination
  # @param account_id The numeric ID of the account
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @return [ConversationList]
  describe 'conversation_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for conversation_list
  # Conversations List
  # List all the conversations with pagination
  # @param account_id The numeric ID of the account
  # @param [Hash] opts the optional parameters
  # @option opts [String] :assignee_type Filter conversations by assignee type.
  # @option opts [String] :status Filter by conversation status.
  # @option opts [String] :q Filters conversations with messages containing the search term
  # @option opts [Integer] :inbox_id 
  # @option opts [Integer] :team_id 
  # @option opts [Array<String>] :labels 
  # @option opts [Integer] :page paginate through conversations
  # @return [ConversationList]
  describe 'conversation_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for conversation_list_meta
  # Get Conversation Counts
  # Get open, unassigned and all Conversation counts
  # @param account_id The numeric ID of the account
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Filter by conversation status.
  # @option opts [String] :q Filters conversations with messages containing the search term
  # @option opts [Integer] :inbox_id 
  # @option opts [Integer] :team_id 
  # @option opts [Array<String>] :labels 
  # @return [ConversationListMeta200Response]
  describe 'conversation_list_meta test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_details_of_a_conversation
  # Conversation Details
  # Get all details regarding a conversation with all messages in the conversation
  # @param account_id The numeric ID of the account
  # @param conversation_id The numeric ID of the conversation
  # @param [Hash] opts the optional parameters
  # @return [ConversationShow]
  describe 'get_details_of_a_conversation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for new_conversation
  # Create New Conversation
  # Creating a conversation in chatwoot requires a source id.    Learn more about source_id: https://github.com/chatwoot/chatwoot/wiki/Building-on-Top-of-Chatwoot:-Importing-Existing-Contacts-and-Creating-Conversations
  # @param account_id The numeric ID of the account
  # @param data 
  # @param [Hash] opts the optional parameters
  # @return [NewConversation200Response]
  describe 'new_conversation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for toggle_status_of_a_conversation
  # Toggle Status
  # Toggles the status of the conversation between open and resolved
  # @param account_id The numeric ID of the account
  # @param conversation_id The numeric ID of the conversation
  # @param data 
  # @param [Hash] opts the optional parameters
  # @return [ConversationStatusToggle]
  describe 'toggle_status_of_a_conversation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
